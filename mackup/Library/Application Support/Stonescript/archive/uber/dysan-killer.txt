?loc.begin
  brew bronze + stone

func ElementSwitcher()
  ?foe = aether
    equipL vigor sword D
  :?foe = fire
    equipL aether sword D
  :?foe = ice
    equipL fire sword D
  :?foe = poison
    equipL ice sword D
  :?foe = vigor
    equipL poison sword D
  :
    equipL vigor D

func DebuffApplier()
  ?foe.buffs.string ="buff_protection"
    ElementSwitcher()
  :?foe.debuffs.string = "∞:debuff_damage:1:"| foe = immune_to_debuff_damage
    ?foe.debuffs.string = "φ:debuff_dot:1:"| foe = immune_to_debuff_dot
      ?foe.debuffs.string = "❄:debuff_chill:6:"| foe = immune_to_debuff_chill
        ElementSwitcher()
      :
        equipL ice sword di
    :
      equipL fire sword df
  :
    equipL poison sword dp

?foe.distance <= 5
  activate potion
  ?hp < maxhp
    equipL sword dL
    ?ai.idle
      equipL wand
      equipL sword dL
    equipR mask
  :
    DebuffApplier()
    ?ai.idle
      equipL wand
      DebuffApplier()
    equipR mask

:?foe.distance >= 6 & foe.distance <= 16
  ?foe.distance >= 11 & item.GetCooldown ("bash") <= 0
    equipR bash
  :
    equipR mask

: // the only possibility left is that enemy is too far
  equipL trisk
  equipR mask

?pickup.distance <= 10
  equipL star

//This only lets you use the ice weapon if no adaptive defence for ice exists, and so on for each element
//No point in using more than 2 or 3 elements, as it loses stacks when swapping type.
// ?!(foe.buffs.string = _ice)
//     equipR sword ice D
// :?!(foe.buffs.string = _fire)
//     equipR sword fire D
// :?!(foe.buffs.string = _aether)
//     equipR sword aether D
