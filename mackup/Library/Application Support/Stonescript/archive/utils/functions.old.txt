var C = import utils/constants

// "Queued" AAC Heavy XBow.
var QSwitcher = 2
var QWeapon1 = "stone throwing"
var QWeapon2 = "stone throwing"

func QAssign(weapon)
  ?QSwitcher % 2 = 0
    QWeapon1 = weapon
  :
    QWeapon2 = weapon

func Crossbows()
  ?time % 4 = 0
    ?foe.debuffs.string = "∞:debuff_damage:1:"| QWeapon1 ="poison crossbow dP"| QWeapon2 ="poison crossbow dP"
      ?foe.debuffs.string = "φ:debuff_dot:1:"| QWeapon1 ="fire crossbow dF"| QWeapon2 ="fire crossbow dF"
        QAssign("aether crossbow D")
      :
        QAssign("fire crossbow dF")
    :
      QAssign("poison crossbow dP")

    ?QSwitcher % 2 = 0
      equip stone throwing
      equip @QWeapon1@
    :
      equip stone throwing
      equip @QWeapon2@
    QSwitcher++

// =============== Old stuff ===============

// Lost items.
func activate_fire_talisman()
  equipL fire_talisman
  ?item.canactivate("fire_talisman")
    activate L

func handle_blade_of_god()
  ?item.GetCooldown("blade") <= 0 & foe.count > 0
    screen.Next()
  :
    screen.ResetOffset()
  ?item.GetCooldown("blade") <= 0 & foe.distance < 25
    equip blade_of_god
    activate R

func handle_bardiche()
  ?(foe.hp + foe.armor) >= C.strong_enemy_hp
    ?foe.distance <= 9
      ?item.GetCooldown("bardiche") <= 0 | item.GetCooldown("bardiche") > 878
        equip bardiche +11
        ?item.CanActivate("bardiche")
          activate R
    :
      bash_or_dash()

func handle_phys_immune()
  ?foe = immune_to_physical & foe.distance <= C.GhostSlayerRange
    equip ghost slayer
    ?foe.distance <= 6 & item.GetCooldown("mind") <= 0
      equipL mind
      equipR compound

func out_of_combat()
  ?pickup.distance > 10 & foe.distance > 25
    equipL trisk
    equipR compound

  :?pickup.distance < 10
    equipL star
    equipR trisk

// ======= Shields =======

func shield_switcher_r()
  ?foe = boss
    equipR poison shield ap

  :?foe = aether
    equipR vigor shield A
  :?foe = fire
    equipR aether shield A
  :?foe = ice
    equipR fire shield A
  :?foe = poison
    equipR ice shield A
  :?foe = vigor
    equipR poison shield A
  :
    equipR compound

func shield_switcher_aac()
  equipL quest
  shield_switcher_r()

// =======================

func aac_repeating_xbow()
  ?time % 2
    equipR ouro
    equip Repeating

func aac_bardiche()
  equip bardiche
  ?ai.idle
    equip skeleton_arm
    equip bardiche

func aac_blade_of_god()
  equip blade_of_god
  ?ai.idle
    equip skeleton_arm
    equip blade_of_god

func aac_sword()
  ?foe = aether
    loadout 1
    ?ai.idle
      equip bardiche
      loadout 1
  :?foe = fire
    loadout 2
    ?ai.idle
      equip bardiche
      loadout 2
  :?foe = ice
    loadout 3
    ?ai.idle
      equip bardiche
      loadout 3
  :?foe = poison
    loadout 4
    ?ai.idle
      equip bardiche
      loadout 4
  :?foe = vigor
    loadout 5
    ?ai.idle
      equip bardiche
      loadout 5
  :
    loadout 2
    ?ai.idle
      equip bardiche
      loadout 2

func log(args)
  var i = 0
  for value : args
    var row = 15 + i
    >`1,@row@,Log: @args[i]@
    i++
