// Credit: https://github.com/bcbays/SSRPGScripts/blob/main/Info/LoopTime.txt

// Loop Time Info v5

// Variables
var loop_time_ui_panel
var loop_time_ui_text_location
var loop_time_ui_text_best
var loop_time_ui_text_mean
var loop_time_ui_text_prev
var loop_time_ui_text_current

var prev_time = -1
var current_time = -1

var color_grading = [
  "#22FF22",
  "#DDDD22",
  "#FF8822",
  "#FF2222"
]

var location_colors = [
  "#white",
  "#cyan",
  "#yellow",
  "#green",
  "#blue",
  "#red"
]

?loc.stars >= 1 & !loc.isQuest
  // Initialization
  ? loc.begin | loc.loop
    // Update previous time
    prev_time = current_time + 1
    current_time = -1
    // UI
    loop_time_ui_panel = ui.AddPanel()
    // loop_time_ui_panel.x = screen.w - 49
    // loop_time_ui_panel.x = 24
    loop_time_ui_panel.x = screen.w - 21
    loop_time_ui_panel.y = 0
    loop_time_ui_panel.w = 21
    loop_time_ui_panel.h = 7
    loop_time_ui_panel.anchor = top_left
    loop_time_ui_panel.dock = top_left

    loop_time_ui_text_location = ui.AddText()
    loop_time_ui_text_location.x = 1
    loop_time_ui_text_location.y = 1
    loop_time_ui_text_location.w = 19
    loop_time_ui_text_location.h = 1
    loop_time_ui_text_location.anchor = top_left
    loop_time_ui_text_location.dock = top_left
    loop_time_ui_text_location.text = loc.name + " " + loc.stars + "*"
    loop_time_ui_text_location.color = location_colors[math.FloorToInt((loc.stars - 1)/5.0)]
    loop_time_ui_panel.Add(loop_time_ui_text_location)

    loop_time_ui_text_best = ui.AddText()
    loop_time_ui_text_best.x = 1
    loop_time_ui_text_best.y = 2
    loop_time_ui_text_best.w = 19
    loop_time_ui_text_best.h = 1
    loop_time_ui_text_best.anchor = top_left
    loop_time_ui_text_best.dock = top_left
    ? loc.bestTime >= 0
      loop_time_ui_text_best.text = "Best " + time.FormatCasual(loc.bestTime,true)
    :
      loop_time_ui_text_best.text = "Best N\A"
    loop_time_ui_panel.Add(loop_time_ui_text_best)

    loop_time_ui_text_mean = ui.AddText()
    loop_time_ui_text_mean.x = 1
    loop_time_ui_text_mean.y = 3
    loop_time_ui_text_mean.w = 19
    loop_time_ui_text_mean.h = 1
    loop_time_ui_text_mean.anchor = top_left
    loop_time_ui_text_mean.dock = top_left
    ? loc.averageTime >= 0
      loop_time_ui_text_mean.text = "Mean " + time.FormatCasual(loc.averageTime,true)
    :
      loop_time_ui_text_mean.text = "Mean N\A"
    loop_time_ui_panel.Add(loop_time_ui_text_mean)

    loop_time_ui_text_prev = ui.AddText()
    loop_time_ui_text_prev.x = 1
    loop_time_ui_text_prev.y = 4
    loop_time_ui_text_prev.w = 19
    loop_time_ui_text_prev.h = 1
    loop_time_ui_text_prev.anchor = top_left
    loop_time_ui_text_prev.dock = top_left
    ? prev_time > 0
      loop_time_ui_text_prev.text = "Prev " + time.FormatCasual(prev_time,true)
    :
      loop_time_ui_text_prev.text = "Prev N\A"
    loop_time_ui_panel.Add(loop_time_ui_text_prev)

    loop_time_ui_text_current = ui.AddText()
    loop_time_ui_text_current.x = 1
    loop_time_ui_text_current.y = 5
    loop_time_ui_text_current.w = 19
    loop_time_ui_text_current.h = 1
    loop_time_ui_text_current.anchor = top_left
    loop_time_ui_text_current.dock = top_left
    loop_time_ui_panel.Add(loop_time_ui_text_current)

  ? loop_time_ui_text_current // Check if intialized
    // Update Time
    loop_time_ui_text_current.text = "Time " + time.FormatCasual(totaltime,true)
    // Color Grading
    ? totaltime < loc.bestTime | loc.bestTime <= 0
      // Faster than best
      loop_time_ui_text_current.color = color_grading[0]
    : ? totaltime < loc.averageTime
      // Faster than average
      loop_time_ui_text_current.color = color_grading[1]
    : ? totaltime < loc.averageTime + 150
      // Less than 5 seconds slower than average
      loop_time_ui_text_current.color = color_grading[2]
    :
      // Greater than 5 seconds slower than average
      loop_time_ui_text_current.color = color_grading[3]

  // Tracking for previous time
  ? current_time < totaltime
    current_time = totaltime
